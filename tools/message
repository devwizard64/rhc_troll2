#!/usr/bin/env python3

import sys
import os

import lang

def list_rstrip(l, v):
	x = l[:]
	while len(x) > 0 and x[-1] == v: x.pop(-1)
	return x

def list_split(l, v):
	x = l + [v]
	n = []
	while v in x:
		i = x.index(v)
		n.append(x[:i])
		x = x[i+1:]
	return n

def fmt_str(lst):
	return ",".join(["0x%02X" % x for x in lst+[0xFF]])

if len(sys.argv) != 3:
	print("usage: %s <output> <input>\n" % sys.argv[0])
	sys.exit(1)
ltbl = None
stbl = []
ctbl = []
ttbl = []
mtbl = []
cstr = None
fn = sys.argv[2]
with open(fn, "r") as f:
	ln = 0
	for line in f:
		ln += 1
		if line.startswith("$$"): continue
		if line.startswith("$"):
			cmd, _, arg = line[1:].partition(":")
			cmd = cmd.strip()
			arg = [x.strip() for x in arg.split(";")]
			if cmd == "lang":
				ltbl = lang.table[arg[0]]
			elif cmd == "name":
				name = arg[0]
			elif cmd == "str":
				cstr = []
				label = arg[0]
				stbl.append([label, cstr])
			elif cmd == "tbl":
				cstr = []
				label = "%s_%d" % (name, len(ttbl))
				ctbl.append([label, cstr])
				ttbl.append(label)
			elif cmd == "msg":
				cstr = []
				label = "%s_%d" % (name, len(mtbl))
				ctbl.append([label, cstr])
				mtbl.append((label, arg[0]))
			else:
				raise RuntimeError("%s:%d: bad cmd '%s'" % (fn, ln, cmd))
			continue
		if cstr is None: continue
		i = 0
		while i < len(line):
			for s, c in ltbl:
				if line[i:].startswith(s):
					cstr.extend(c)
					i += len(s)
					break
			else:
				raise RuntimeError("%s:%d:%d: illegal character '%s'" % (
					fn, ln, i, s[i]
				))
with open(sys.argv[1], "w") as f:
	for label, lst in stbl:
		f.write("#define %s %s\n" % (
			label, fmt_str(list_rstrip(lst, 0xFE))
		))
	for label, lst in ctbl:
		f.write("static unsigned char str_%s[] = {%s};\n" % (
			label, fmt_str(list_rstrip(lst, 0xFE))
		))
	if ttbl:
		f.write("\nunsigned char *str_%s[] =\n{\n" % name)
		for label in ttbl: f.write("\tstr_%s,\n" % label)
		f.write("\tNULL,\n};\n")
	if mtbl:
		f.write("\n")
		for label, arg in mtbl: f.write(
			"static MESSAGE msg_%s = {%s, str_%s};\n" % (label, arg, label)
		)
		f.write("\nMESSAGE *msg_%s[] =\n{\n" % name)
		for label, arg in mtbl: f.write(
			"\t&msg_%s,\n" % label
		)
		f.write("\tNULL,\n};\n")
